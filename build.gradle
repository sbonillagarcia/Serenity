// Tareas por defecto al ejecutar simplemente `./gradlew`
defaultTasks 'clean', 'test', 'aggregate'

// Repositorios de dependencias
repositories {
    mavenCentral()
    mavenLocal()
    maven { url "https://plugins.gradle.org/m2/" }
}

// Configuración del plugin de Serenity
plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'net.serenity-bdd.serenity-gradle-plugin' version '4.1.14'
}

// Compatibilidad con Java 17
java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

// Variables para versiones
ext {
    SERENITY_VERSION = '4.1.14'
    JUNIT_PLATFORM_VERSION = '1.10.2'
    CUCUMBER_JUNIT_PLATFORM_VERSION = '7.14.0'
    JUNIT_JUPITER_VERSION = '5.10.2'
    JUNIT_VINTAGE_VERSION = '5.10.2'
    LOGBACK_CLASSIC_VERSION = '1.2.10'
    ASSERTJ_CORE_VERSION = '3.25.3'
}

// Dependencias del proyecto
dependencies {
    implementation "net.serenity-bdd:serenity-core:${SERENITY_VERSION}"
    implementation "net.serenity-bdd:serenity-junit:${SERENITY_VERSION}"
    implementation "net.serenity-bdd:serenity-junit5:${SERENITY_VERSION}"
    implementation "net.serenity-bdd:serenity-screenplay:${SERENITY_VERSION}"
    implementation "net.serenity-bdd:serenity-screenplay-webdriver:${SERENITY_VERSION}"
    implementation "net.serenity-bdd:serenity-ensure:${SERENITY_VERSION}"
    implementation "net.serenity-bdd:serenity-cucumber:${SERENITY_VERSION}"
    implementation "ch.qos.logback:logback-classic:${LOGBACK_CLASSIC_VERSION}"
    implementation "org.assertj:assertj-core:${ASSERTJ_CORE_VERSION}"

    testImplementation "org.junit.platform:junit-platform-launcher:${JUNIT_PLATFORM_VERSION}"
    testImplementation "io.cucumber:cucumber-junit-platform-engine:${CUCUMBER_JUNIT_PLATFORM_VERSION}"
    testImplementation "org.junit.platform:junit-platform-suite:${JUNIT_PLATFORM_VERSION}"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:${JUNIT_JUPITER_VERSION}"
    testImplementation "org.junit.vintage:junit-vintage-engine:${JUNIT_VINTAGE_VERSION}"
    testImplementation "net.serenity-bdd:serenity-saucelabs:${SERENITY_VERSION}"
    testImplementation "io.github.bonigarcia:webdrivermanager:5.7.0"
}

// Configuración de pruebas
test {
    useJUnitPlatform()
    systemProperties System.getProperties()
    maxParallelForks = 2
}

// Si `test` falla, igual correr `aggregate` para generar el reporte
test.finalizedBy(aggregate)

// Permitir continuar en caso de fallos
gradle.startParameter.continueOnFailure = true
